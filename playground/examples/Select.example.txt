class SelectExample extends React.Component {

    constructor(){
        super();

        this.onChange = this.onChange.bind(this);

        this.state = {
            selected: 'option2',
            selected2: undefined,
            selected3: ['option2', 'option4']
        }

    }

    render(){
        return (
            <div>
                <Select noDuplicates onChange={this.onChange} dataLabel="plan" selected={this.state.selected} dataLabel="selected" label="Some label" filterPlaceholder="Type to filter">
                    <Option value="option1">Option1</Option>
                    <Option value="option2">Option2</Option>
                    <Option value="option3">Option3</Option>
                    <Option value={4}>Option4</Option>
                    <Option value={5}>Option5</Option>
                </Select>
                <br/>
                <Select noDuplicates noFilter isLoading onChange={this.onChange} dataLabel="plan" selected={this.state.selected} dataLabel="selected" label="No Filtering" filterPlaceholder="Type to filter">
                    <Option value="option1">Option1</Option>
                    <Option value="option2">Option2</Option>
                    <Option value="option3">Option3</Option>
                    <Option value={4}>Option4</Option>
                    <Option value={5}>Option5</Option>
                </Select>
                <br/>
                <Select placeholder="Sort by..." alternate lockSelected onChange={this.onChange} selected={this.state.selected2} dataLabel="selected2">
                    <Option value="option1">Some value 1</Option>
                    <Option value="option2">Some Loooong value Some Loooong value Some Loooong value Some Loooong value 2</Option>
                    <Option value="option3">Some value 3</Option>
                    <Option value="option4">Some value 4</Option>
                </Select>
                <br/>
                <Select placeholder="Locked with allowed dropdown" allowSelectOnLocked alternate lockSelected onChange={this.onChange} selected={this.state.selected2} dataLabel="selected2">
                    <Option value="option1">Some value 1</Option>
                    <Option value="option2">Some Loooong value Some Loooong value Some Loooong value Some Loooong value 2</Option>
                    <Option value="option3">Some value 3</Option>
                    <Option value="option4">Some value 4</Option>
                </Select>
                <br/>
                <Select noFilter placeholder="Sort by..." isLoading alternateStyleColor alternate onChange={this.onChange} selected={this.state.selected2} dataLabel="selected2">
                    <Option value="option1">Some value 1</Option>
                    <Option value="option2">Some value 2</Option>
                    <Option value="option3">Some value 3</Option>
                    <Option value="option4">Some value 4</Option>
                    <Option value="option5">Some value 5</Option>
                    <Option value="option6">Some value 6</Option>
                    <Option value="option7">Some value 7</Option>
                    <Option value="option8">Some value 8</Option>
                </Select>
                <br/>
                <Select onChange={this.onChange} selected={this.state.selected3} dataLabel="selected3">
                    <Option value="option1">Some value 1</Option>
                    <Option value="option2">Some value 2</Option>
                    <Option value="option3">Some value 3</Option>
                    <Option value="option4">Some value 4</Option>
                    <Option value="option5">Some value 5</Option>
                    <Option value="option6">Some value 6</Option>
                    <Option value="option7">Some value 7</Option>
                    <Option value="option8">Some value 8</Option>
                </Select>
            </div>
        );
    }

    onChange(e, data) {
        console.log(e.target);
        this.setState({[data.dataLabel]: data.value});
    }

}
