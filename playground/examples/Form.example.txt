class FormExample extends React.Component {

    constructor(){
        super();

        this.onSubmit = this.onSubmit.bind(this);
        this.setValue = this.setValue.bind(this);
        this.getDate = this.getDate.bind(this);
        this.reset = this.reset.bind(this);

        this.state = {
            contact: [
                {
                    checked: true,
                    value: 'email',
                    label:'Email'
                },
                {
                    checked: false,
                    value: 'tel',
                    label: 'Telephone'
                },
                {
                    checked: false,
                    value: 'skype',
                    label: 'Skype'
                },
                {
                    checked: false,
                    value: 'raven',
                    label: 'Raven'
                },
                {
                    checked: false,
                    value: 'palantir',
                    label: 'Palantír'
                }
            ],
            country: '',
            email: '',
            firstname: 'Doni',
            lastname: 'Behrami',
            position: [{selected: false, value: 'fontend', label: 'Frontend Developer' }, {selected: true, value: 'backend', label: 'Backend Developer'}],
            salary: '',
            message: EditorState.createEmpty(),
            duration: '',
            start: 1511342490554,
            training: true
        };
    }

    render() {

        return(
            <div>
                <H2>Forms/FormGroups</H2>
                <Form onSubmit={this.onSubmit}>
                    <FormGroup horizontal>
                        <FormGroup >
                            <Input
                                label="Firstname:"
                                onChange={this.setValue}
                                dataLabel="firstname"
                                value={this.state.firstname}
                            />
                            <Input
                                label="Lastname:"
                                onChange={this.setValue}
                                dataLabel="lastname"
                                value={this.state.lastname}
                            />
                            <Input
                                label="Country:"
                                onChange={this.setValue}
                                dataLabel="country"
                                value={this.state.country}
                            />
                            <Input
                                label="Email:"
                                type="email"
                                onChange={this.setValue}
                                dataLabel="email"
                                value={this.state.email}
                            />
                            <RadioGroup title="Position: " dataLabel="position" onChange={this.setValue} selectedRadios={this.state.position}>
                                <Radio
                                    value="fontend"
                                    label="Frontend Developer"
                                />
                                <Radio
                                    value="backend"
                                    label="Backend Developer"
                                />
                            </RadioGroup>
                        </FormGroup>
                        <FormGroup >
                            <Switch
                                label="Training:"
                                onLabel="Done"
                                offLabel="Ongoing"
                                on={this.state.training}
                                onClick={this.setValue}
                                dataLabel="training"
                            />
                            <TextArea
                                rows={11}
                                label="Cover Letter:"
                                onChange={this.setValue}
                                dataLabel="coverletter"
                                value={this.state.coverletter}
                            />
                            <TextArea
                                richEditor
                                richValue = {this.state.message}
                                dataLabel = "message"
                                onChange = {this.getDate}
                            />
                            <CheckboxGroup onChange={this.setValue} title="Contact" dataLabel="contact" selectedChecks={this.state.contact} horizontal>
                                <Checkbox value="email" label="Email" />
                                <Checkbox value="tel" label="Telephone" />
                                <Checkbox value="skype" label="Skype" />
                                <Checkbox value="raven" label="Raven" />
                                <Checkbox value="palantir" label="Palantír" />
                            </CheckboxGroup>
                        </FormGroup>
                    </FormGroup>
                    <FormGroup >
                        <Input
                            label="Desired Salary:"
                            onChange={this.setValue}
                            dataLabel="salary"
                            value={this.state.salary}
                            type="number"
                        />
                        <DatePicker date={this.state.start} onChange={this.getDate} dataLabel="start" label={'Available to start:'}/>
                        <FileUpload files={this.state.logo} dataLabel="logo" label="Logo:" onChange={this.setValue} accept=".png"/>
                        <Select
                            dataLabel="duration"
                            selected={this.state.duration}
                            onChange={this.setValue}
                            label="Training duration:"
                        >
                            <Option value="asap">Asap</Option>
                            <Option value="1-4w">1-4 weeks</Option>
                            <Option value="1-3m">1-3 months</Option>
                            <Option value="3-6m">3-6 months</Option>
                        </Select>
                    </FormGroup>
                    <FormGroup style={{flexDirection: 'row'}}>
                        <Button type="submit">Submit</Button>
                        <Button onClick={this.reset}>Reset</Button>
                    </FormGroup>
                </Form>
                <hr/>
                <H2>Forms/FormGroups</H2>
                <Form >
                    <FormGroup>
                        <Input label="Your firstname:" dataLabel="firstname"/>
                        <Input label="Your lastname:" dataLabel="lastname"/>
                        <Input label="Country:" dataLabel="country"/>
                    </FormGroup>
                    <FormGroup>
                        <FormGroup>
                            <RadioGroup title="Some Radios" dataLabel="radios" onChange={this.setValue}>
                                <Radio value="Radio 1"/>
                                <Radio value="Radio 2"/>
                                <Radio value="Radio 3"/>
                                <Radio value="Radio 4"/>
                                <Radio value="Radio 5"/>
                            </RadioGroup>
                        </FormGroup>
                        <FormGroup>
                            <CheckboxGroup onChange={this.setValue} dataLabel="checkboxes">
                                <Checkbox value="Checkbox 1" />
                                <Checkbox value="Checkbox 2" />
                                <Checkbox value="Checkbox 3" />
                            </CheckboxGroup>
                        </FormGroup>
                    </FormGroup>
                    <Button>Submit</Button>
                </Form>
            </div>
        );
    }

    reset() {
        this.setState({
            contact: [
                {
                    checked: false,
                    value: 'email',
                    label:'Email'
                },
                {
                    checked: false,
                    value: 'tel',
                    label: 'Telephone'
                },
                {
                    checked: false,
                    value: 'skype',
                    label: 'Skype'
                },
                {
                    checked: false,
                    value: 'raven',
                    label: 'Raven'
                },
                {
                    checked: false,
                    value: 'palantir',
                    label: 'Palantír'
                }
            ],
            country: '',
            coverletter: '',
            email: '',
            firstname: '',
            lastname: '',
            position: [{selected: true, value: 'fontend', label: 'Frontend Developer' }, {selected: false, value: 'backend', label: 'Backend Developer'}],
            salary: '',
            message: EditorState.createEmpty(),
            duration: '',
            start: '',
            training: false,
        });
    }

    onSubmit(e, data) {
        console.log(data.value);
    }

    setValue(e, data) {
        data.dataLabel && this.setState({[data.dataLabel]: data.value});
    }

    getDate(data) {
        data.dataLabel && this.setState({[data.dataLabel]: data.value});
    }

}
